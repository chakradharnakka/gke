apiVersion: v1
data:
  CLUSTER_BIND_ADDRESS: NON_LOOPBACK
  CLUSTER_NAME: na-northeast1
  ## CHANGEME
  # points to local pingfederate cluster and external name pingfederate-cluster in opposite k8s cluster
  DNS_QUERY_LOCATION: "pingfederate-cluster.na-northeast1.svc.clusterset.local,pingfederate-cluster.us-central1.svc.clusterset.local"
  DNS_RECORD_TYPE: A
  OPERATIONAL_MODE: CLUSTERED_CONSOLE
  PING_IDENTITY_ACCEPT_EULA: "YES"
  SERVER_PROFILE_PATH: getting-started/pingfederate
  SERVER_PROFILE_URL: https://github.com/pingidentity/pingidentity-server-profiles.git
  PD_ENGINE_PRIVATE_HOSTNAME: pingdirectory-cluster
kind: ConfigMap
metadata:
  name: pingfederate-admin-environment-variables
---
apiVersion: v1
data:
  CLUSTER_BIND_ADDRESS: NON_LOOPBACK
  CLUSTER_NAME: na-northeast1
  ## CHANGEME
  # points to local pingfederate cluster and external name pingfederate-cluster in opposite k8s cluster
  DNS_QUERY_LOCATION: "pingfederate-cluster.na-northeast1.svc.clusterset.local,pingfederate-cluster.us-central1.svc.clusterset.local"
  DNS_RECORD_TYPE: A
  OPERATIONAL_MODE: CLUSTERED_ENGINE
  PING_IDENTITY_ACCEPT_EULA: "YES"
  SERVER_PROFILE_PATH: getting-started/pingfederate
  SERVER_PROFILE_URL: https://github.com/pingidentity/pingidentity-server-profiles.git
  PD_ENGINE_PRIVATE_HOSTNAME: pingdirectory-cluster
kind: ConfigMap
metadata:
  name: pingfederate-engine-environment-variables
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  labels:
    role: pingfederate
  name: pingfederate-cluster
spec:
  clusterIP: None
  ports:
  - name: bind-port
    port: 7600
    protocol: TCP
    targetPort: 7600
  publishNotReadyAddresses: true
  # selector is not specific to admin or engine, so it picks up both. 
  selector:
    role: pingfederate
---
apiVersion: net.gke.io/v1
kind: ServiceExport
metadata:
  name: pingfederate-cluster
---
apiVersion: v1
kind: Service
metadata:
  labels:
    role: pingfederate
    tier: engine
  name: pingfederate
spec:
  ports:
  - name: https
    port: 9031
  selector:
    role: pingfederate
    tier: engine
---
apiVersion: v1
kind: Service
metadata:
  labels:
    role: pingfederate
    tier: console
  name: pingfederate-admin
spec:
  ports:
  - name: pf-console
    port: 9999
  selector:
    role: pingfederate
    tier: console
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pingfederate
  labels:
    role: pingfederate
    tier: engine
spec:
  replicas: 2
  selector:
    matchLabels:
      role: pingfederate
      tier: engine
  strategy:
  # Rolling updates allow us to transition engines from one config to another. 
    type: RollingUpdate
    rollingUpdate:
    # configure surge depending on what surge infrastructure can handle
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      name: pingfederate
      labels:
        role: pingfederate
        tier: engine
        # version is a placeholder to trigger a rolling update. 
        # ideally, the update should be triggered by changing of the server-profile tag. (example below)
        version: "0.1"
    spec:
      containers:
      - name: pingfederate
        image: pingidentity/pingfederate:edge
        ports:        
        - containerPort: 9031
        volumeMounts:
          - name: pingfederate-license-volume
            mountPath: "/opt/in/instance/server/default/conf/pingfederate.lic"
            subPath: pingfederate.lic
        securityContext:
          runAsUser: 0
          allowPrivilegeEscalation: true
        ## ideally, all profiles (configs) should be tagged in Github. 
        ##   thus, to deploy a new config, you simply update the tag to point to the new version. 
        ##   this also enables rollbacks *woot woot*
        # env:
        #   - name: SERVER_PROFILE_BRANCH
        #     value: v1
        envFrom:
        - configMapRef:
            name: pingfederate-engine-environment-variables
        - secretRef:
            name: devops-secret
            optional: true
        # readiness is important during a rolling update. 
        readinessProbe:
          httpGet:
            path: /pf/heartbeat.ping
            port: 9031
            scheme: HTTPS
          periodSeconds: 10
        # the prestop 'sleep' should be slightly higher than the lifetime of an _authorization code_
        # auth codes are not shared across the cluster unless requested, the prestop hook ensures that a 
        # PF engine is alive and accessible only to other engines long enough to provide auth codes it owns. 
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh","-c","sleep 20"]
      # this helps on the _initial_ start of the cluster to ensure engines and admins don't create cluster islands
      initContainers:
      - name: init
        image: curlimages/curl:latest
        command: ['sh', '-c', 'until curl --connect-timeout 1 --silent -k https://urldefense.com/v3/__https://pingfederate-admin:9999/pingfederate/app__;!!GF_29dbcQIUBPA!mlLnsRuALySUfvoNPfwR31_73zvc_mwoB3b1TO3Tfwhly5nSgsoJmp36sEhdfuCRNBJV37Q$ [pingfederate-admin] ; do echo waiting for admin ; sleep 2 ; done']
      volumes:
        - name: pingfederate-license-volume
          secret:
            secretName: pingfederate-license
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    role: pingfederate
    tier: console
  name: pingfederate-admin
spec:
  replicas: 1
  selector:
    matchLabels:
      role: pingfederate
      tier: console
  strategy:
    # admin should only have have one instance at a time. type: Recreate helps force this.
    type: Recreate
  template:
    metadata:
      labels:
        role: pingfederate
        tier: console
      name: pingfederate-admin
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: pingfederate-admin-environment-variables
        - secretRef:
            name: devops-secret
            optional: true
        image: pingidentity/pingfederate:edge
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 1
          httpGet:
            path: /pingfederate/app
            port: 9999
            scheme: HTTPS
          initialDelaySeconds: 100
          periodSeconds: 1
        name: pingfederate-admin
        ports:
        - containerPort: 9999
        - containerPort: 7600
        volumeMounts:
          - name: pingfederate-license-volume
            mountPath: "/opt/in/instance/server/default/conf/pingfederate.lic"
            subPath: pingfederate.lic
        securityContext:
          runAsUser: 0
          allowPrivilegeEscalation: true
        readinessProbe:
          httpGet:
            path: /pingfederate/app
            port: 9999
            scheme: HTTPS
          periodSeconds: 10
      volumes:
        - name: pingfederate-license-volume
          secret:
            secretName: pingfederate-license
